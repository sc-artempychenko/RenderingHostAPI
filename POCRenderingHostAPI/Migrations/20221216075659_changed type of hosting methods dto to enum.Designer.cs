// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POCRenderingHostAPI.Data;

#nullable disable

namespace POCRenderingHostAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221216075659_changed type of hosting methods dto to enum")]
    partial class changedtypeofhostingmethodsdtotoenum
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("POCRenderingHostAPI.Models.DTO.RenderingHostDTO", b =>
                {
                    b.Property<string>("RenderingHostId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EnvironmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformTenantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RenderingHostHostingMethod")
                        .HasColumnType("int");

                    b.Property<string>("RenderingHostUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepositoryUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceControlIntegrationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RenderingHostId");

                    b.ToTable("RenderingHosts");
                });
#pragma warning restore 612, 618
        }
    }
}
